import React, { useState, useEffect } from 'react';
import { Database, AlertCircle, CheckCircle, Wifi, WifiOff, RefreshCw } from 'lucide-react';
import { supabase, isSupabaseConfigured } from '../lib/supabase';

const DatabaseStatus: React.FC = () => {
  const [isConnected, setIsConnected] = useState(false);
  const [isChecking, setIsChecking] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    checkConnection();
  }, []);

  const checkConnection = async () => {
    setIsChecking(true);
    setError(null);
    
    try {
      // First check if Supabase is configured
      if (!isSupabaseConfigured()) {
        setIsConnected(false);
        setError('ูุฑุฌู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช Supabase ุฃููุงู');
        return;
      }

      // Try to make a simple query to test connection
      const { data, error: queryError } = await supabase!
        .from('florina.products')
        .select('id')
        .limit(1);
      
      if (queryError) {
        // Check for specific error types
        if (queryError.message?.includes('relation "florina.products" does not exist')) {
          setError('ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฌุฏูุฏุฉ ุบูุฑ ููุฌูุฏุฉ. ูุฑุฌู ุชุดุบูู ูููุงุช ุงููุงูุฌุฑูุดู ุงูุฌุฏูุฏุฉ.');
        } else if (queryError.message?.includes('relation "products" does not exist')) {
          setError('ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ. ูุฑุฌู ุชุดุบูู ุงููุงูุฌุฑูุดู ุฃููุงู.');
        } else if (queryError.message?.includes('Invalid API key') || queryError.code === 'PGRST301') {
          setError('ููุชุงุญ API ุบูุฑ ุตุญูุญ. ูุฑุฌู ุงูุชุญูู ูู ุฅุนุฏุงุฏุงุช Supabase.');
        } else if (queryError.message?.includes('Project not found') || queryError.code === 'PGRST000') {
          setError('ูุดุฑูุน Supabase ุบูุฑ ููุฌูุฏ. ูุฑุฌู ุงูุชุญูู ูู ุงูุฑุงุจุท.');
        } else if (queryError.message?.includes('relation') && queryError.message?.includes('does not exist')) {
          setError('ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ. ูุฑุฌู ุชุดุบูู ูููุงุช ุงููุงูุฌุฑูุดู.');
        } else {
          setError(`ุฎุทุฃ ูู ุงูุงุชุตุงู: ${queryError.message}`);
        }
        setIsConnected(false);
      } else {
        setIsConnected(true);
        setError(null);
      }
    } catch (err: any) {
      setIsConnected(false);
      if (err.message?.includes('Failed to fetch')) {
        setError('ูุดู ูู ุงูุงุชุตุงู ุจุงูุฎุงุฏู. ุชุญูู ูู ุงุชุตุงู ุงูุฅูุชุฑูุช.');
      } else {
        setError(`ุฎุทุฃ ูู ุงูุงุชุตุงู: ${err.message}`);
      }
    } finally {
      setIsChecking(false);
    }
  };

  if (isChecking) {
    return (
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
        <div className="flex items-center space-x-3 space-x-reverse">
          <RefreshCw className="w-5 h-5 text-blue-600 animate-spin" />
          <span className="text-blue-800">ุฌุงุฑู ูุญุต ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...</span>
        </div>
      </div>
    );
  }

  if (!isConnected) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
        <div className="flex items-start space-x-3 space-x-reverse">
          <AlertCircle className="w-5 h-5 text-red-600 mt-0.5 flex-shrink-0" />
          <div className="flex-1">
            <h3 className="text-red-800 font-medium mb-2 flex items-center space-x-2 space-x-reverse">
              <WifiOff className="w-4 h-4" />
              <span>ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ูุชุตูุฉ</span>
            </h3>
            <p className="text-red-700 text-sm mb-3">
              {error || 'ูุง ูููู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช. ุงูุจูุงูุงุช ูู ูุชู ุญูุธูุง.'}
            </p>
            
            {!isSupabaseConfigured() && (
              <div className="bg-red-100 rounded-lg p-3 mb-3">
                <h4 className="font-medium text-red-800 mb-3 flex items-center space-x-2 space-x-reverse">
                  <span>๐ ุฎุทูุงุช ุงูุฅุนุฏุงุฏ ุงูุณุฑูุน:</span>
                </h4>
                <ol className="text-sm text-red-700 space-y-2">
                  <li>1. ุงููุฑ ุนูู ุฒุฑ "Connect to Supabase" ูู ุฃุนูู ุงูุตูุญุฉ</li>
                  <li>2. ุฃูุดุฆ ูุดุฑูุน ุฌุฏูุฏ ุนูู <a href="https://supabase.com" target="_blank" rel="noopener noreferrer" className="underline font-medium hover:text-red-900">supabase.com</a></li>
                  <li>3. ุงูุณุฎ ุงูู Project URL ูุงูู API Key ูู ุฅุนุฏุงุฏุงุช ุงููุดุฑูุน</li>
                  <li>4. ุงูุตูููุง ูู ุงููููุฐุฌ ูุงุถุบุท "ุงุชุตุงู"</li>
                  <li>5. ุดุบู ูููุงุช ุงููุงูุฌุฑูุดู ูู SQL Editor</li>
                </ol>
                <div className="mt-3 p-2 bg-red-200 rounded text-xs">
                  <strong>๐ก ูุตูุญุฉ:</strong> ุงุญูุธ ุจูุงูุงุช Supabase ูู ููุงู ุขูู ูุงุณุชุฎุฏุงููุง ูุงุญูุงู
                </div>
              </div>
            )}
            
            {isSupabaseConfigured() && (error?.includes('ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ') || error?.includes('ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฌุฏูุฏุฉ ุบูุฑ ููุฌูุฏุฉ')) && (
              <div className="bg-red-100 rounded-lg p-4 mb-3">
                <h4 className="font-medium text-red-800 mb-3 flex items-center space-x-2 space-x-reverse">
                  <span>๐ ุฎุทูุงุช ุฅูุดุงุก ุงูุฌุฏุงูู:</span>
                </h4>
                <div className="space-y-3">
                  <div className="bg-white rounded p-3 border border-red-200">
                    <h5 className="font-medium text-red-700 mb-2">ุงูุทุฑููุฉ ุงูุฃููู - ููู ูุงุญุฏ ุดุงูู:</h5>
                    <ol className="text-sm text-red-700 space-y-1">
                      <li>1. ุงุฐูุจ ุฅูู SQL Editor ูู Supabase</li>
                      <li>2. ุงูุณุฎ ูุงูุตู ูุฐุง ุงูููุฏ:</li>
                    </ol>
                    <div className="mt-2 bg-gray-100 p-2 rounded text-xs font-mono">
                      <code>{`-- ุฅูุดุงุก schema
CREATE SCHEMA IF NOT EXISTS florina;
SET search_path TO florina, public;

-- ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู
CREATE TABLE florina.users (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  email text UNIQUE NOT NULL,
  full_name text NOT NULL,
  role text DEFAULT 'employee',
  is_active boolean DEFAULT true,
  created_at timestamptz DEFAULT now()
);

-- ุฅุฏุฑุงุฌ ุงููุณุชุฎุฏู ุงูุฅุฏุงุฑู
INSERT INTO florina.users (email, full_name, role) VALUES
('florinacafe@gmail.com', 'ูุฏูุฑ ูููู ูููุฑููุง', 'admin');`}</code>
                    </div>
                  </div>
                  
                  <div className="bg-white rounded p-3 border border-red-200">
                    <h5 className="font-medium text-red-700 mb-2">ุงูุทุฑููุฉ ุงูุซุงููุฉ - ูููุงุช ูููุตูุฉ:</h5>
                    <ol className="text-sm text-red-700 space-y-1">
                      <li>1. ุงุฐูุจ ุฅูู SQL Editor ูู Supabase</li>
                      <li>2. ุดุบู ุงููููุงุช ุจุงูุชุฑุชูุจ ูู ูุฌูุฏ supabase/migrations:</li>
                      <li className="mr-4">โข 20250726092739_violet_violet.sql (ุงููููู ุงูุฃุณุงุณู)</li>
                      <li className="mr-4">โข 20250726092837_blue_sun.sql (ุงูุฏูุงู ูุงููุญูุฒุงุช)</li>
                      <li className="mr-4">โข 20250726092910_quick_haze.sql (ุงูุนุฑูุถ)</li>
                      <li className="mr-4">โข 20250726092951_pink_thunder.sql (ุณูุงุณุงุช ุงูุฃูุงู)</li>
                      <li className="mr-4">โข 20250726093020_blue_torch.sql (ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ)</li>
                      <li className="mr-4">โข 20250729032137_steep_mountain.sql (ุงููุณุชุฎุฏู ุงูุฅุฏุงุฑู)</li>
                    </ol>
                  </div>
                </div>
              </div>
            )}
            
            <button
              onClick={checkConnection}
              className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors text-sm flex items-center space-x-2 space-x-reverse"
            >
              <RefreshCw className="w-4 h-4" />
              <span>ุฅุนุงุฏุฉ ุงููุญุงููุฉ</span>
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="bg-emerald-50 border border-emerald-200 rounded-lg p-4 mb-6">
      <div className="flex items-center space-x-3 space-x-reverse">
        <CheckCircle className="w-5 h-5 text-emerald-600" />
        <span className="text-emerald-800 font-medium">ูุชุตู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช</span>
        <Wifi className="w-4 h-4 text-emerald-600" />
        <span className="text-emerald-700 text-sm">ุงูุจูุงูุงุช ูุชู ุญูุธูุง ุจูุฌุงุญ</span>
      </div>
    </div>
  );
};

export default DatabaseStatus;